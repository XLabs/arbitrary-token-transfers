/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { PriceOracle, PriceOracleInterface } from "../PriceOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWormhole",
        name: "wormholeCore",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "chainId",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "command",
        type: "uint8",
      },
    ],
    name: "ChainNotSupportedByCommand",
    type: "error",
  },
  {
    inputs: [],
    name: "IdempotentUpgrade",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "command",
        type: "uint8",
      },
    ],
    name: "InvalidAccessControlCommand",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "query",
        type: "uint8",
      },
    ],
    name: "InvalidAccessControlQuery",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidChainId",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "command",
        type: "uint8",
      },
    ],
    name: "InvalidCommand",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidData",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "InvalidEvmLayout",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "query",
        type: "uint8",
      },
    ],
    name: "InvalidPriceQuery",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "query",
        type: "uint8",
      },
    ],
    name: "InvalidQuery",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "InvalidSolanaLayout",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "encodedLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expectedLength",
        type: "uint256",
      },
    ],
    name: "LengthMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "UnsupportedVersion",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "revertData",
        type: "bytes",
      },
    ],
    name: "UpgradeFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isAdmin",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "AdminsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "AssistantUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint16",
        name: "chainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "feeParams",
        type: "bytes32",
      },
    ],
    name: "FeeParamsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "cancelOwnershipTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "checkedUpgrade",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "exec768",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "get1959",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "receiveOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a080604052346100dd57602081611ac4803803809161001f82856100e2565b8339810103126100dd57516001600160a01b038116908190036100dd57602060049160405192838092634d4502c960e11b82525afa9081156100d15760009161008d575b506080526040516119a8908161011c823960805181818161052a01528181610632015261074e0152f35b6020813d6020116100c9575b816100a6602093836100e2565b810103126100c557519061ffff821682036100c2575038610063565b80fd5b5080fd5b3d9150610099565b6040513d6000823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b0382119082101761010557604052565b634e487b7160e01b600052604160045260246000fdfe60806040908082526004918236101561001757600080fd5b60009160e08335811c9182610eb6146108bf5750816208a1121461042a575080631c74a3011461040e57806323452b9c146103bb578063c987336c1461030a578063f2fde38b146102915763f4189c471461007157600080fd5b602036600319011261028d57823567ffffffffffffffff81116102895761009b9036908501610dc4565b909233301461026e5760ff9360ff6000805160206119138339815191525460a01c1661025e57906100ef959291606090601492601482013560f81c946015966100e387611043565b9789519b8c998a610e40565b878952601f196100fe89611043565b013660208b013783905b8b82168981101561013557918161012b8e948b6001958b01358c1c93019d61105b565b5201168b98610108565b509a505094509450959150935060148685013560601c9601936001600160601b0360a01b6000805160206118f3833981519152823560601c82825416179055865b89518110156101a45760019061019e6001600160a01b03610197838e61105b565b51166116ea565b01610176565b509193959750919395600080516020611953833981519152918254161790555b8385106101fb57505050906101d8916112c0565b600080516020611913833981519152805460ff60a01b1916600160a01b17905580f35b602285019481016002810135903560f01c600019810161024a576001600160701b03198216610233579061022e9161160d565b6101c4565b83516329f6374760e01b8152808601839052602490fd5b9061022e91610258826115e3565b5061160d565b8351636edaef2f60e11b81528690fd5b93925061027c5750506101d8565b51635cb045db60e01b8152fd5b8280fd5b5080fd5b508234610289576020366003190112610289576102ac610da9565b6000805160206118f3833981519152549092906001600160a01b031633036102fd5760008051602061193383398151915280546001600160a01b0319166001600160a01b0385161790558380f35b80f35b5163ea8e4eb560e01b8152fd5b50829034610289578060031936011261028957610325610da9565b60243567ffffffffffffffff81116103b7576103449036908501610dc4565b9361034d610f13565b60038110156103a4576001036103965750849061037561036c86610e62565b94519485610e40565b848452368582011161028d57846102fa956020928387013784010152610f43565b835163ea8e4eb560e01b8152fd5b634e487b7160e01b875260218252602487fd5b8480fd5b508290346102895782600319360112610289576000805160206118f3833981519152546001600160a01b031633036102fd5760008051602061193383398151915280546001600160a01b03191690558280f35b82346104275780600319360112610427576102fa610e7e565b80fd5b92905034610427573660031901908082126104275736851161042757600194606094859160f88135811c806108a957509091929794975b888610610485576104818888610477898d6112c0565b5191829182610d7d565b0390f35b939795949293608093600181019190840135831c828682036107f457505080600183860135851c9301918b925b8085851015610799578d9392918b918b916001810191908b01358a1c8c81036105da575050916105cf916105a384600196958d013560f01c926006820135811c93600a830135821c916012600e850135821c94019b8c9281526020966000805160206118d3833981519152885288808320549261ffff7f000000000000000000000000000000000000000000000000000000000000000016815220549464e8d4a51000948591620f4240918263ffffffff916c0c9f2c9cd04674edea400000008665ffffffffffff809d16029c029a881698838960501c169135901c02029560301c160202910201010202016116ca565b93825194816105bb8793518092868087019101610d5a565b820190838201520390810184520182610e40565b935b019290916104b2565b919691608181036106b1575050916106ab916105a360019594888d0135831c9260088a01358d1c90600d60098c0135821c9b019a838a8d95526020966000805160206118d3833981519152885288808320549261ffff7f000000000000000000000000000000000000000000000000000000000000000016815220549464e8d4a51000948591633b9aca0091826c0c9f2c9cd04674edea4000000063ffffffff928665ffffffffffff809d16029c35901c0299871697828860501c1602029560301c160202910201010202016116ca565b936105d1565b925095925050609081146000146107165750506001906106ab8b6106fb60056003880197013560f01c61ffff166000526000805160206118d3833981519152602052604060002090565b5492815180946020926105bb81518092868087019101610d5a565b9093506091810361078357506001906106ab60228c51809360209061074381518092848087019101610d5a565b82019061ffff60f01b7f000000000000000000000000000000000000000000000000000000000000000060f01b1690820152036002810184520182610e40565b876024918c519163cd59c00960e01b8352820152fd5b509196509a9694939992506107e8915097969799915b885180936020926107c881518092868087019101610d5a565b82016107dc82518093868085019101610d5a565b01038084520182610e40565b96909192979497610461565b909195506081829b9795949a939b9998991460001461084f57505060008051602061195383398151915254875190851b6bffffffffffffffffffffffff19166020820152601481526107e89061084981610e24565b916107af565b819a509061085c916112ea565b9a9092918b811561088e575b501561087857506107e8906107af565b836024918a51916304b22ccd60e01b8352820152fd5b905061089e929b50819350611512565b9a9192909238610868565b82602491895191634fc7a24160e01b8352820152fd5b915050600319360193838512610d5657368111610d565760f8813560f81c9260019380610d42575050949192945b82841061091b57610481858761090387876112c0565b80519161090f83610df2565b82525191829182610d7d565b9390946001840193860135851c848115600014610c6357505061093c6115a4565b9060039182811015610c505780600114908115610c45575b5015610c0d5782915b6001860195880135871c8480805b8984831015610bd957858b019a8d9291818401358e1c916005919082013560f01c8015610bc95761ffff90818e16818103610b7d575b50508c16600114610a9757505090818c9392156000146109d957505060206001926109d09201359b019a6115e3565b915b019061096b565b909250905060018103610a105750988b019869ffffffff0000000000001916893560b01c63ffffffff60301b1617906001906109d2565b60028103610a3f5750988b019863ffffffff60501b1916893560901c63ffffffff60501b1617906001906109d2565b909990808603610a695750600681019965ffffffffffff1916908c013560d01c17906001906109d2565b865162f4f6c960e11b815261ffff8a16818f0190815260ff90921660208301529081906040010390fd5b0390fd5b929c93929091888103610ac65750505090600681600193013560d01c91019a65ffffffffffff191617916109d2565b9283149c935091908c908115610b73575b5015610b44575087610b345760070199600191908b359015610b135763ffffffff60301b9060b01c169063ffffffff60301b1916175b916109d2565b63ffffffff60501b1990911660909190911c63ffffffff60501b1617610b0d565b865163ea8e4eb560e01b81528d90fd5b8d610a938b928a5193849362f4f6c960e11b8552840190929160ff60209161ffff604085019616845216910152565b9050811438610ad7565b9d9195909d610bb9575b50506001610bb08d61ffff166000526000805160206118d3833981519152602052604060002090565b549490386109a1565b610bc29161160d565b3880610b87565b8a51633d23e4d160e11b81528690fd5b5093505097959894929693505061ffff8216610bfd575b5050915b949192946108ed565b610c069161160d565b3880610bf0565b60008051602061195383398151915254336001600160a01b0390911603610c365760019161095d565b5163ea8e4eb560e01b81528690fd5b905060021438610954565b634e487b7160e01b845260218852602484fd5b939692959194919360018203610cf0575050601490610c80610f13565b5060008051602061195383398151915280546001600160a01b0319811685840135606090811c91821790935587516001600160a01b039092168252602082015242818801527f3f4ccaaf70444668629f9d73fb8d07b721b5a6dbd08f6331f708a38d4f33f06e9190a10191610bf4565b8194925090610cff9188611085565b9390848115610d2b575b5015610d155750610bf4565b8260249186519163250e356760e21b8352820152fd5b829550610d3a9291508861125c565b939038610d09565b634fc7a24160e01b82528184015260249150fd5b8380fd5b60005b838110610d6d5750506000910152565b8181015183820152602001610d5d565b60409160208252610d9d8151809281602086015260208686019101610d5a565b601f01601f1916010190565b600435906001600160a01b0382168203610dbf57565b600080fd5b9181601f84011215610dbf5782359167ffffffffffffffff8311610dbf5760208381860195010111610dbf57565b6020810190811067ffffffffffffffff821117610e0e57604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff821117610e0e57604052565b90601f8019910116810190811067ffffffffffffffff821117610e0e57604052565b67ffffffffffffffff8111610e0e57601f01601f191660200190565b600080516020611933833981519152805490336001600160a01b03831603610f01576001600160601b0360a01b80921690556000805160206118f38339815191529033908254161790557fbc698c847421762cb14eaf0c2130057ac8e6169afa7d7935121d828bcc5697ac606060405160008152336020820152426040820152a1565b60405163ea8e4eb560e01b8152600490fd5b610f1b6115a4565b6003811015610f2d578015610f015790565b634e487b7160e01b600052602160045260246000fd5b60008051602061191383398151915280546001600160a01b03928316939281168414611031576001600160a01b0319168317905560405163f4189c4760e01b6020820190815291610fab908290610f9d9060248301610d7d565b03601f198101835282610e40565b600080928192519082305af13d15611029573d90610fc882610e62565b91610fd66040519384610e40565b82523d83602084013e5b1561100c5750807fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b91a2565b604051630dc0c93f60e01b8152908190610a939060048301610d7d565b606090610fe0565b60405163071d44f360e41b8152600490fd5b67ffffffffffffffff8111610e0e5760051b60200190565b805182101561106f5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b916060919060ff1682810361123b575061109d610f13565b906003821015610f2d576001949392858693149160049060f89560018284013560f81c92019660009060009a5b6110e1575b50969850505050505050505b60019190565b88848c101561123557898901998a90870135831c8061111e5750505087899a9b6111156014839c8901358a1c9d019c6117a4565b019a99986110ca565b8915611224576012810361114c5750505087899a9b6111476014839c8901358a1c9d019c6116ea565b611115565b919a916010810361119c57505060008051602061193383398151915280546001600160a01b0319166001600160a01b0360058d01358a1c1617905550989960159098019896978897908890611115565b919a50906011810361120d575088999a9b6111478a926000805160206118f38339815191526001600160601b0360a01b81541690557fbc698c847421762cb14eaf0c2130057ac8e6169afa7d7935121d828bcc5697ac8a60408051908982528960208301524290820152a1866112c0565b8660249160405191636bf9452160e11b8352820152fd5b60405163ea8e4eb560e01b81528890fd5b506110cf565b9093925060611415905061125657611251610e7e565b6110db565b60009190565b9160ff166062036112b85761126f610f13565b6003811015610f2d57600103610f01578061129160146112b3930180946112c0565b6040519061129e82610df2565b6000825260003681376004013560601c610f43565b600191565b600092909150565b908082036112cc575050565b60449250604051916355c5b3e360e11b835260048301526024820152fd5b60009160ff1660e0036114f757606091600182810192849060f890600490810135821c908590855b611324575b5060019895505050505050565b87969799989996838910156114ed5780870190820135851c608281036113a2575050858798999a611399602161136460056015869d019d01358a1c61156b565b5415159260405193849160209061138381518092848088019101610d5a565b8301918b1b908201520384810184520182610e40565b995b0196611312565b989a989097506083810361145f57506000805160206118b383398151915254604090815161140460218260208e819f6113e390518092848087019101610d5a565b868c1b6001600160f81b03191690830191820152038b810184520182610e40565b9984925b82841061141e575050505085809798999a61139b565b9091929a610f9d6114558b926114338f611687565b90548651948593909260031b9190911c6001600160a01b03169088840161165b565b9b01929190611408565b979997608081036114a6575085809798999a6114a060018060a01b036000805160206118f38339815191525416915b610f9d6040519384926020840161165b565b9961139b565b608181036114d6575085809798999a6114a060018060a01b0360008051602061193383398151915254169161148e565b60405163aec4026d60e01b81529182015260249150fd5b9750989798611317565b90916040519261150684610df2565b80845280368137929190565b9060009060ff1660e10361155d575060008051602061191383398151915254604051906001600160601b03199060601b1660208201526014815261155581610e24565b916001929190565b916040519261150684610df2565b6001600160a01b031660009081527fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61066020526040902090565b6000805160206118f383398151915254336001600160a01b03909116036115ca57600190565b6115d33361156b565b54156115de57600290565b600090565b6001600160701b031981166115f55790565b602490604051906316bcef6560e01b82526004820152fd5b602061ffff7f25b7d8414a57c7b2f9843c1ff146a5f23784faa5fbc0998f6c0ac4eccfb7d4fb921692836000526000805160206118d3833981519152825280604060002055604051908152a2565b6020906116716014949382815194859201610d5a565b01906001600160601b03199060601b1681520190565b6000805160206118b3833981519152805482101561106f576000527f296433d8098e91d572ca7d09e7ebd7d8042b9d74c00f9ba783c10d0b47a3822b0190600090565b81156116d4570490565b634e487b7160e01b600052601260045260246000fd5b60016116f58261156b565b541515146117a1576000805160206118b38339815191529081549068010000000000000000821015610e0e577fa99bf65b87cfe278bd29adb5e131110d99f32e084b4c8a6fbda37f71966e40389261177682611758856001606097018555611687565b90919060018060a01b038084549260031b9316831b921b1916179055565b546117808261156b565b55604080516001600160a01b039092168252600160208301524290820152a1565b50565b6117ad8161156b565b54156117a1576117bc8161156b565b54906000805160206118b383398151915291825490818103611865575b505060006117e68261156b565b55815490811561184f577fa99bf65b87cfe278bd29adb5e131110d99f32e084b4c8a6fbda37f71966e4038926060926000190161182281611687565b9290805460018060a01b03809560031b1b19169055556040519116815260006020820152426040820152a1565b634e487b7160e01b600052603160045260246000fd5b6118ab9161188461187a600019809301611687565b9290549301611687565b81546001600160a01b03600392831b81811b199092169490921b9490941c1690921b179055565b38806117d956feb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6105390950e512c08746510d8189287f633f84012f0678caa6bc6558847bdd158b23b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbcb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104a1f28b22c196686da956abee6956ab0f6625f5b97ed2295735931c66c7c7b5e8a2646970667358221220a7b9a1298807b92aba786209c3b21f2fd9a7f621d5f127220fcbd6caeaf94a9564736f6c63430008190033";

type PriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PriceOracle__factory extends ContractFactory {
  constructor(...args: PriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    wormholeCore: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(wormholeCore, overrides || {});
  }
  override deploy(
    wormholeCore: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(wormholeCore, overrides || {}) as Promise<
      PriceOracle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PriceOracle__factory {
    return super.connect(runner) as PriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PriceOracleInterface {
    return new Interface(_abi) as PriceOracleInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PriceOracle {
    return new Contract(address, _abi, runner) as unknown as PriceOracle;
  }
}
