name: Run tests

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: read

jobs:
  solana-tests:
    name: Run Solana SDK tests
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: "--max-old-space-size=2500"
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "22.14.0"
          registry-url: "https://npm.pkg.github.com"
          cache: "yarn"
          cache-dependency-path: |
            ./yarn.lock
      - name: Read relayer-infra-contracts commit hash
        id: relayer-infra-contracts-commit
        shell: bash
        run: |
            submodule_status=$(git submodule status --cached | grep relayer-infra-contracts)
            # we discard the first character which represents working tree summary diff
            echo "commit=${submodule_status:1:40}" >> $GITHUB_OUTPUT
      - name: Checkout relayer-infra-contracts
        uses: actions/checkout@v4
        with:
          repository: xlabs/relayer-infra-contracts
          path: lib/relayer-infra-contracts
          ssh-key: '${{ secrets.RELAYER_INFRA_CONTRACTS }}'
          ref: ${{ steps.relayer-infra-contracts-commit.outputs.commit }}

      - name: Set the rust toolchain version
        run: rustup override set 1.86.0
      # Less than ideal since a single program dependency change will impact the cache for both
      - name: Cache Rust packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            lib/relayer-infra-contracts/src/solana/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock', 'lib/relayer-infra-contracts/src/solana/Cargo.lock') }}

      # Taken from https://github.com/metaDAOproject/setup-anchor/blob/main/action.yml#L25-L40
      # TODO: read Solana version from Anchor.toml
      - name: Cache Solana CLI tools
        id: cache-solana-tools
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/solana/
            ~/.local/share/solana/
          key: solana-cli-${{ runner.os }}-build-2.1.18
      - name: Install Solana CLI tools
        if: ${{ steps.cache-solana-tools.outputs.cache-hit != 'true' }}
        run: sh -c "$(curl -sSfL https://release.anza.xyz/v2.1.18/install)"
        shell: bash
      # TODO: read Anchor version from Anchor.toml
      - name: Cache Anchor CLI tools
        id: cache-anchor-tool
        uses: actions/cache@v4
        with:
          path: |
            ~/bin/anchor
          key: anchor-cli-${{ runner.os }}-build-0.31.1
      - name: Install Anchor
        if: ${{ steps.cache-anchor-tool.outputs.cache-hit != 'true' }}
        run: |
          wget https://github.com/coral-xyz/anchor/releases/download/v0.31.1/anchor-0.31.1-x86_64-unknown-linux-gnu
          chmod +x anchor-0.31.1-x86_64-unknown-linux-gnu
          mkdir -p "$HOME/bin/anchor"
          mv anchor-0.31.1-x86_64-unknown-linux-gnu "$HOME/bin/anchor/anchor"
        shell: bash
      - name: Update PATH
        run: |
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
          echo "$HOME/bin/anchor" >> $GITHUB_PATH
        shell: bash
      - name: Create keypair
        run: solana-keygen new --no-bip39-passphrase
        shell: bash
      - name: Setup private package access
        run: |
          yarn config set npmScopes.xlabs.npmAlwaysAuth true
          yarn config set npmScopes.xlabs.npmAuthToken ${{ secrets.GITHUB_TOKEN }}
      - name: Install dependencies
        run: yarn install --immutable --immutable-cache
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Solana programs
        run: anchor build
        shell: bash
 
      - name: Run Solana SDK tests
        run: |
          yarn ./sdk/common build:ts && yarn ./sdk/solana build:ts && yarn ./solana build:ts
          anchor run setup-test
          anchor test
        shell: bash